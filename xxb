<html>
<body>
一、线性表<br>
1、双链表
<div>
	创建:<input style='width:50px' type='button' value='提交' onclick='createXxbSlb()'>
<div>插入:<input type='text' style='width:50px' ><input type='button' value='提交' onclick='insertXxbSlb(this.parentNode.getElementsByTagName("input")[0].value)'></div>
<div>查找:<input style='width:50px' type='text' ><input type='button' value='提交'  onclick='findXxbSlb(this.parentNode.getElementsByTagName("input")[0].value)'></div><div>
删除:<input type='text'style='width:50px'  ><input  type='button' value='提交'  onclick='delXxbSlb(this.parentNode.getElementsByTagName("input")[0].value)'></div>
<script>
var vals=['a','b','c','d','e','f','i','s'];
var dsSlb=null,dsSlbR=null;
	//创建双向链表
function createXxbSlb(){
	var p={data:null,pre:null,next:null};
	dsSlb=p;
	dsSlbr=p;
	for(var i=0,l=vals.length;i<l;i++){
		p={data:vals[i],pre:null,next:null};
		dsSlbr.next=p;
		p.pre=dsSlbr;
		dsSlbr=p;
	}
	//	dsSlbr.next=dsSlb;
	//	dsSlb.pre=dsSlbr;
	console.log(dsSlb);		 
}
	//查找
	function findXxbSlb(fvalue){
		if(fvalue===undefined || !fvalue){
			console.log("请输入数值");return;
		}
		var head=dsSlb;
		while(head){
			if(head.data && head.data===fvalue){
					console.log("找到"+fvalue+",在");
						console.log(head);
					return head;
					}
			head=head.next;
		}
		console.log("未找到");
		return head;		
	}
	//插入 尾插入
	function insertXxbSlb(ivalue){
		if(ivalue===undefined || !ivalue){
			console.log("请输入数值");return;
		}
		var pos=findXxbSlb(ivalue);
		if(pos){
			console.log("数值已存在");return;
		}
		var p={data:ivalue,pre:dsSlbr,next:null};
		dsSlbr.next=p;
		dsSlbr=p;
		console.log(dsSlb);
	}
	//删除
	function delXxbSlb(ivalue){
		if(ivalue===undefined || !ivalue){
			console.log("请输入数值");return;
		}
		var pos=findXxbSlb(ivalue);
		if(!pos){
			console.log("数值不存在");return;
		}
		pos.pre.next=pos.next;
		
		if(dsSlbr===pos)
				dsSlbr=pos.pre;
		else
				pos.next.pre=pos.pre;
		/*
		if(!pos.next){
			dsSlbr=pos.pre;		
		}else
			pos.next.pre=pos.pre;	
		*/
		console.log(dsSlb);
	}	
</script>
</body>
</html>
